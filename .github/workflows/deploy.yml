name: .NET Core
on:
  push:
    branches:
      - dev

env:
  RG_NAME: RG-Demoaspnet5aks
  AZURE_LOCATION: westeurope
  RG_NAME_TEST: RG-Test-Template

jobs:
  Build-Infra:
    runs-on: ubuntu-20.04
    steps:

      - name: Recuperation du repo
        uses: actions/checkout@v2

      - name: Run de Becep
        uses: aliencube/bicep-build-actions@v0.1
        with:
          files: Bicep/main.bicep

      - name: Publish ARM template artifact
        uses: actions/upload-artifact@v1
        with:
          name: arm_template
          path: ./Bicep/main.json

  Test-Template-ARM:
    runs-on: ubuntu-20.04
    needs: Build-Infra
    steps:

      - name: Creation dossier Artifact
        run: |
          mkdir Template_Artifacts

      - name: Recuperation de artefact
        uses: actions/download-artifact@v2
        with:
          name: arm_template
          path: Template_Artifacts/

      - name: List artefact
        run: |
          ls -R

      - name: Azure Login
        uses: Azure/login@v1
        with:    
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Creation du RG & Check Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az group create --name ${{ env.RG_NAME_TEST }} --location ${{ env.AZURE_LOCATION }}
            az deployment group validate --resource-group ${{ env.RG_NAME_TEST }} --template-file ./Template_Artifacts/main.json

      - name: What-if Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az deployment group what-if --resource-group ${{ env.RG_NAME_TEST }} --name rollout01 --template-file ./Template_Artifacts/main.json

  Deploy-To-Dave:
    runs-on: ubuntu-20.04
    needs: Test-Template-ARM
    environment:
      name: dev
    steps:

      - name: Recuperation du repo
        uses: actions/checkout@v2

      - name: Creation dossier Artifact
        run: |
          mkdir Template_Artifacts

      - name: Recuperation de artefact
        uses: actions/download-artifact@v2
        with:
          name: arm_template
          path: Template_Artifacts/

      - name: Azure Login
        uses: Azure/login@v1
        with:    
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Creation du RG & Deploiement du Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az group create --name ${{ env.RG_NAME }} --location ${{ env.AZURE_LOCATION }}

      - name: Deploiement du template ARM
        uses: azure/arm-deploy@v1
        id: deploy
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RG_NAME }}
          template: ./Template_Artifacts/main.json          
          deploymentName: Deployment-001
          deploymentMode: Incremental

      - name: Build image with Azure Container Registry
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az acr build --registry ${{ steps.deploy.outputs.registryNameOutput }} --image aspnet5webapp:${GITHUB_SHA::8} ./WebApp/

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Kustomize edit
        run: |
          cd ./Kubernetes/
          echo $IMAGE
          echo ${GITHUB_SHA::8}
          kustomize edit set image aspnet5webapp:latest=$IMAGE/aspnet5webapp:${GITHUB_SHA::8}
        env:
          IMAGE: ${{ steps.deploy.outputs.registryNameOutput }}.azurecr.io

      - name: Kustomize build
        run: |
          kustomize build ./Kubernetes >> ./Kubernetes/output.yaml
          cat ./Kubernetes/output.yaml

      - name: Install Kubectl and deploy
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az aks install-cli
            az aks get-credentials -g ${{ steps.deploy.outputs.resourceGroupOutput }} -n ${{ steps.deploy.outputs.aksName }}
            kubectl apply -f ./Kubernetes/output.yaml -n aspnet5webapp